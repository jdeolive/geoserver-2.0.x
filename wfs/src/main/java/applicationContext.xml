<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	<!-- factories -->
	<bean id="filterFactory" class="org.geotools.filter.FilterFactoryImpl"/>

	<bean id="wfsLegacyLoader" class="org.geoserver.wfs.WFSLoader"/>
	<bean id="wfsLoader" class="org.geoserver.wfs.WFSXStreamLoader">
	  <constructor-arg ref="resourceLoader"/>
	</bean>
    
	<!-- wfs service -->
	<!--bean id="wfsService" class="org.geoserver.wfs.DefaultWebFeatureService">
		<constructor-arg ref="geoServer"/>
		<property name="filterFactory" ref="filterFactory"/>
	</bean-->
	<bean id="wfsServiceTarget" class="org.geoserver.wfs.DefaultWebFeatureService">
		<constructor-arg ref="geoServer"/>
		<property name="filterFactory" ref="filterFactory"/>
	</bean>

    <bean id="wfsLogger" class="org.geoserver.ows.util.EMFLogger">
      <constructor-arg type="java.lang.String" value="org.geoserver.wfs"/>
    </bean>
	<bean id="wfsService" class="org.springframework.aop.framework.ProxyFactoryBean">
	  <property name="proxyInterfaces">
	  	<value>org.geoserver.wfs.WebFeatureService</value>
	  </property>
	  <property name="interceptorNames">
	  	<list>
	  		<value>wfsLogger</value>
	  		<value>wfsServiceTarget</value>
	  	</list>
	  </property>
	</bean>
  
    <!-- Transaction element handlers -->
    <bean id="wfsInsertElementHandler" class="org.geoserver.wfs.InsertElementHandler">
      <constructor-arg ref="geoServer"/>
      <constructor-arg ref="filterFactory"/>
    </bean>
    
    <bean id="wfsUpdateElementHandler" class="org.geoserver.wfs.UpdateElementHandler">
      <constructor-arg ref="geoServer"/>
    </bean>
    
    <bean id="wfsDeleteElementHandler" class="org.geoserver.wfs.DeleteElementHandler">
      <constructor-arg ref="geoServer"/>
    </bean>
    
    <bean id="wfsNativeElementHandler" class="org.geoserver.wfs.NativeElementHandler">
    </bean>
		
	<!-- service descriptors -->
	<bean id="wfsService-1.0.0" class="org.geoserver.platform.Service">
		<constructor-arg index="0" value="wfs"/>
		<constructor-arg index="1" ref="wfsService"/>
		<constructor-arg index="2" value="1.0.0"/>
		<constructor-arg index="3">
		  <list>
		    <value>GetCapabilities</value>
		    <value>DescribeFeatureType</value>
		    <value>GetFeature</value>
		    <value>GetFeatureWithLock</value>
		    <value>LockFeature</value>
		    <value>Transaction</value>
		  </list>
		</constructor-arg>
	</bean>
	
	<bean id="wfsService-1.1.0" class="org.geoserver.platform.Service">
		<constructor-arg index="0" value="wfs"/>
		<constructor-arg index="1" ref="wfsService"/>
		<constructor-arg index="2" value="1.1.0"/>
		<constructor-arg index="3">
          <list>
            <value>GetCapabilities</value>
            <value>DescribeFeatureType</value>
            <value>GetGmlObject</value>
            <value>GetFeature</value>
            <value>GetFeatureWithLock</value>
            <value>LockFeature</value>
            <value>Transaction</value>
          </list>
        </constructor-arg>
	</bean>
	
	<!-- service exception handler -->
	<bean id="wfsExceptionHandler" class="org.geoserver.wfs.response.WfsExceptionHandler">
		<constructor-arg>
			<list>
				<ref bean="wfsService-1.0.0"/>
				<ref bean="wfsService-1.1.0"/>
			</list>		
		</constructor-arg>	
		<constructor-arg ref="geoServer"/>
	</bean>
	
	<!-- gml schema builders -->
	<bean id="gml2SchemaBuilder" class="org.geoserver.wfs.xml.FeatureTypeSchemaBuilder$GML2">
		<constructor-arg ref="geoServer"/>
	</bean>
	<bean id="gml3SchemaBuilder" class="org.geoserver.wfs.xml.FeatureTypeSchemaBuilder$GML3">
		<constructor-arg ref="geoServer"/>
	</bean>
	
	<!-- xml configuration -->
	<bean id="wfsXsd-1.0" class="org.geoserver.wfs.xml.v1_0_0.WFS">
	    <constructor-arg ref="gml2SchemaBuilder"/>
	</bean>
	<bean id="xmlConfiguration-1.0" class="org.geoserver.wfs.xml.v1_0_0.WFSConfiguration">
		<constructor-arg ref="catalog"/>
		<constructor-arg ref="gml2SchemaBuilder"/>
		<constructor-arg ref="wfsXsd-1.0"/>
	</bean>
	<alias name="xmlConfiguration-1.0" alias="wfsXmlConfiguration-1.0"/>
	
	<bean id="wfsXsd-1.1" class="org.geoserver.wfs.xml.v1_1_0.WFS">
        <constructor-arg ref="gml3SchemaBuilder"/>
    </bean>
	<bean id="xmlConfiguration-1.1" class="org.geoserver.wfs.xml.v1_1_0.WFSConfiguration">
		<constructor-arg ref="catalog"/>
		<constructor-arg ref="gml3SchemaBuilder"/>
		<constructor-arg ref="wfsXsd-1.1"/>
	</bean>
	<alias name="xmlConfiguration-1.1" alias="wfsXmlConfiguration-1.1"/>
	
	<!-- responses -->
	<bean id="getCapabilitiesResponse"
		class="org.geoserver.wfs.response.GetCapabilitiesResponse" singleton="false"/>
	<bean id="lockFeatureResponse"
		class="org.geoserver.wfs.response.LockFeatureTypeResponse" singleton="false">
		<constructor-arg ref="geoServer"/>
		<constructor-arg ref="xmlConfiguration-1.1"/>
	</bean>
	<bean id="transactionResponse-1.0.0"
		class="org.geoserver.wfs.response.TransactionResponse" singleton="false">
		<constructor-arg ref="geoServer"/>
		<constructor-arg ref="xmlConfiguration-1.1"/>
	</bean>
	<bean id="geometryResponse"
		class="org.geoserver.wfs.response.GeometryResponse">
        <constructor-arg ref="geoServer"/>
    </bean>
	<bean id="featureResponse"
		class="org.geoserver.wfs.response.FeatureResponse">
		<constructor-arg ref="geoServer"/>
		<constructor-arg ref="xmlConfiguration-1.1"/>
	</bean>
	
	<!-- cite compliance hack -->
	<bean id="citeComplianceHack" class="org.geoserver.wfs.CiteComplianceHack">
		<constructor-arg ref="geoServer"/>
	</bean>
	
	<!-- test servlet -->
	<bean id="wfsTestServlet" class="org.springframework.web.servlet.mvc.ServletWrappingController">
	  <property name="servletClass" value="org.vfny.geoserver.wfs.servlets.TestWfsPost"/>
	  <property name="servletName" value="TestWfsPost"/>
	</bean>
	
	<!-- http url mapping -->
	<bean id="wfsURLMapping"
        class="org.geoserver.ows.OWSHandlerMapping">
        <constructor-arg ref="catalog"/> 
		<property name="alwaysUseFullPath" value="true"/>
		<property name="interceptors">
			<list>
				<ref bean="citeComplianceHack"/>
			</list>
		</property>
	
		<property name="mappings">
			<props>
				<prop key="/wfs">dispatcher</prop>
				<prop key="/wfs/*">dispatcher</prop>
				<prop key="/TestWfsPost">wfsTestServlet</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- kvp parsers -->
	<bean id="typeNameKvpParser" class="org.geoserver.wfs.kvp.QNameKvpParser">
        <constructor-arg value="typeName"/>
		<constructor-arg ref="catalog"/>
	</bean>
	<bean id="featureIdKvpParser" class="org.geoserver.ows.FlatKvpParser">
		<constructor-arg index="0" value="featureId"/>
		<constructor-arg index="1" value="java.lang.String"/>
	</bean>
	
	<bean id="bboxKvpParser" class="org.geoserver.wfs.kvp.BBoxKvpParser"/>
	<bean id="filter1_0_0_KvpParser" class="org.geoserver.wfs.kvp.Filter_1_0_0_KvpParser">
		<property name="service"><value>WFS</value></property>
		<property name="version"><value>1.0.0</value></property>
	</bean>
	<bean id="filter1_1_0_KvpParser" class="org.geoserver.wfs.kvp.Filter_1_1_0_KvpParser">
		<property name="service"><value>WFS</value></property>
		<property name="version"><value>1.1.0</value></property>
	</bean>
	<!-- the filter kvp parser to use when the version and/or service parameters are not supplied
	     (they're mandatory, but we're lax, so without this default catch-all parser the dispatcher
	     may not find out the one to use) -->
	<bean id="filter1_1_0_KvpParserDefault" class="org.geoserver.wfs.kvp.Filter_1_1_0_KvpParser"/>

    <bean id="cqlKvpParser" class="org.geoserver.wfs.kvp.CQLFilterKvpParser"/>
	<bean id="propertyNameKvpParser" class="org.geoserver.ows.NestedKvpParser">
		<constructor-arg index="0" value="propertyName"/>
		<constructor-arg index="1" value="java.lang.String"/>
	</bean>
	<bean id="maxFeatureKvpParser" class="org.geoserver.ows.util.NumericKvpParser">
		<constructor-arg index="0" value="maxFeatures"/>
		<constructor-arg index="1" value="java.math.BigInteger"/>
	</bean>
	
	<bean id="srsNameKvpParser" class="org.geoserver.wfs.kvp.SrsNameKvpParser"/>
	<bean id="sortByKvpParser" class="org.geoserver.wfs.kvp.SortByKvpParser">
		<constructor-arg ref="filterFactory"/>
	</bean>
	<bean id="expiryKvpParser" class="org.geoserver.ows.util.NumericKvpParser">
		<constructor-arg value="expiry"/>
		<constructor-arg value="java.math.BigInteger"/>
	</bean>
	<bean id="resultTypeKvpParser" class="org.geoserver.wfs.kvp.ResultTypeKvpParser"/>
	<bean id="acceptVersionsKvpParser" class="org.geoserver.wfs.kvp.AcceptVersionsKvpParser"/>
	<bean id="acceptFormatsKvpParser" class="org.geoserver.wfs.kvp.AcceptFormatsKvpParser"/>
    <bean id="strictKvpParser" class="org.geoserver.ows.kvp.BooleanKvpParser">
        <constructor-arg value="strict"/>
    </bean>
    <bean id="wfsFormatOptionsKvpParser" class="org.geoserver.ows.kvp.FormatOptionsKvpParser"/>
    <bean id="charsetKvpParser" class="org.geoserver.ows.kvp.CharsetKVPParser">
        <constructor-arg value="charset"/>
    </bean>
    
	<!-- kvp request readers -->
	<bean id="wfsGetCapabilitiesKvpReader"  
		class="org.geoserver.wfs.kvp.GetCapabilitiesKvpRequestReader"/>

	<bean id="describeFeatureTypeKvpReader" 
		class="org.geoserver.wfs.kvp.DescribeFeatureTypeKvpRequestReader"/>

	<bean id="getFeatureKvpReader" class="org.geoserver.wfs.kvp.GetFeatureKvpRequestReader">
		<constructor-arg value="net.opengis.wfs.GetFeatureType"/>
		<constructor-arg ref="catalog"/>
		<constructor-arg ref="filterFactory"/>
	</bean>
	<bean id="getFeatureWithLockKvpReader" class="org.geoserver.wfs.kvp.GetFeatureKvpRequestReader">
		<constructor-arg value="net.opengis.wfs.GetFeatureWithLockType"/>
		<constructor-arg ref="catalog"/>
		<constructor-arg ref="filterFactory"/>
	</bean>
	<bean id="lockFeatureKvpReader" class="org.geoserver.wfs.kvp.WFSKvpRequestReader">
		<constructor-arg value="net.opengis.wfs.LockFeatureType"/>
	</bean>
	<bean id="transactionKvpReader" class="org.geoserver.wfs.kvp.WFSKvpRequestReader">
		<constructor-arg value="net.opengis.wfs.TransactionType"/>
	</bean>
	<bean id="releaseLockKvpReader" class="org.geoserver.wfs.kvp.ReleaseLockKvpRequestReader"/>
	
	<!-- 1.0 xml readers -->
	<bean id="xmlReader-1.0.0" class="org.geoserver.wfs.xml.v1_0_0.WfsXmlReader" abstract="true">
		<constructor-arg index="1" ref="xmlConfiguration-1.0"/>
		<constructor-arg index="2" ref="catalog"/>
	</bean>
	<bean id="wfsGetCapabilitiesXmlReader"
		class="org.geoserver.wfs.xml.v1_0_0.WfsXmlReader" parent="xmlReader-1.0.0">
		<constructor-arg value="GetCapabilities"/>
	</bean>
	<bean id="describeFetureTypeXmlReader"
		class="org.geoserver.wfs.xml.v1_0_0.WfsXmlReader" parent="xmlReader-1.0.0">
		<constructor-arg value="DescribeFeatureType"/>
	</bean>
	<bean id="getFeatureXmlReader" 
		class="org.geoserver.wfs.xml.v1_0_0.WfsXmlReader" parent="xmlReader-1.0.0">
		<constructor-arg value="GetFeature"/>
	</bean>
	<bean id="getFeatureWithLockXmlReader" 
		class="org.geoserver.wfs.xml.v1_0_0.WfsXmlReader" parent="xmlReader-1.0.0">
		<constructor-arg value="GetFeatureWithLock"/>
	</bean>
	<bean id="lockFeatureXmlReader" 
		class="org.geoserver.wfs.xml.v1_0_0.WfsXmlReader" parent="xmlReader-1.0.0">
		<constructor-arg value="LockFeature"/>
	</bean>
	<bean id="transactionXmlReader" 
		class="org.geoserver.wfs.xml.v1_0_0.WfsXmlReader" parent="xmlReader-1.0.0">
		<constructor-arg value="Transaction"/>
	</bean>
	
	<!-- 1.1 xml readers -->
	<bean id="xmlReader-1.1.0" class="org.geoserver.wfs.xml.v1_1_0.WfsXmlReader" abstract="true">
		<constructor-arg ref="geoServer"/>
		<constructor-arg ref="xmlConfiguration-1.1"/>
	</bean>
	<bean id="wfsGetCapabilitiesXmlReader-1.1.0" parent="xmlReader-1.1.0">
		<constructor-arg type="java.lang.String" value="GetCapabilities"/>
	</bean>
	<bean id="describeFeatureTypeXmlReader-1.1.0" parent="xmlReader-1.1.0">
		<constructor-arg value="DescribeFeatureType"/>
	</bean>
	<bean id="getFeatureTypeXmlReader-1.1.0" parent="xmlReader-1.1.0">
		<constructor-arg value="GetFeature"/>
	</bean>
	<bean id="getFeatureWithLockXmlReader-1.1.0" parent="xmlReader-1.1.0">
		<constructor-arg value="GetFeatureWithLock"/>
	</bean>
	<bean id="lockFeatureXmlReader-1.1.0" parent="xmlReader-1.1.0">
		<constructor-arg value="LockFeature"/>
	</bean>
	<bean id="transactionXmlReader-1.1.0" parent="xmlReader-1.1.0">
		<constructor-arg value="Transaction"/>
	</bean>
	<bean id="getGmlObjectXmlReader-1.1.0" parent="xmlReader-1.1.0">
	    <constructor-arg value="GetGmlObject"/>
	</bean>
	
	<!-- default feature type encoders -->
	<bean id="gml2FeatureTypeEncoder" 
		class="org.geoserver.wfs.xml.v1_1_0.XmlSchemaEncoder$V10">
		<constructor-arg ref="geoServer"/>
	</bean>
	<bean id="gml3FeatureTypeEncoder" 
		class="org.geoserver.wfs.xml.v1_1_0.XmlSchemaEncoder$V11">
		<constructor-arg ref="geoServer"/>
	</bean>
	<!-- default get feature producers -->
	<bean id="gml2OutputFormat" 
		class="org.geoserver.wfs.xml.GML2OutputFormat" singleton="false">
		<constructor-arg ref="geoServer"/>
	</bean>
	<!-- uncomment below and comment out above to switch between gml2 output formats -->
	<!--bean id="gml2OutputFormat" 
        class="org.geoserver.wfs.xml.GML2OutputFormat2" singleton="false">
        <constructor-arg ref="geoServer"/>
    </bean-->
	<bean id="gml3OutputFormat" class="org.geoserver.wfs.xml.GML3OutputFormat"> 
		<constructor-arg ref="geoServer"/>
		<constructor-arg ref="xmlConfiguration-1.1"/>
	</bean>
	<bean id="hitsOutputFormat" class="org.geoserver.wfs.response.HitsOutputFormat">
		<constructor-arg ref="geoServer"/>
		<constructor-arg ref="xmlConfiguration-1.1"/>
	</bean>
	<bean id="shapezipOutputFormat" class="org.geoserver.wfs.response.ShapeZipOutputFormat" />
    <bean id="geojsonOutputFormat" class="org.geoserver.wfs.response.GeoJSONOutputFormat">
		<constructor-arg ref="geoServer"/>
	</bean>
    <bean id="CSVOutputFormat" class="org.geoserver.wfs.response.CSVOutputFormat">
        <constructor-arg index="0" ref="geoServer"/>
    </bean>
    
    <!-- workspace qualifier -->
    <bean id="wfsWorkspaceQualifier" class="org.geoserver.wfs.WFSWorkspaceQualifier">
        <constructor-arg ref="catalog"/>
    </bean>
    <bean id="wfsLocalWorkspaceURLManger" class="org.geoserver.ows.LocalWorkspaceURLMangler">
      <constructor-arg value="wfs"/>
    </bean>
</beans>