<?xml version="1.0" encoding="ISO-8859-1"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.geoserver</groupId>
  <artifactId>cite</artifactId>
  <version>1.0</version>
  <name>Compliance + Interopability Testing + Evaluation (CITE) Module</name>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.6.5</version>
          </dependency>
          <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b3</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
             <id>pre</id>
             <phase>process-sources</phase>
             <configuration>
               <tasks> 
                  <typedef resource="net/sf/antcontrib/antlib.xml">
                   <classpath refid="maven.dependency.classpath"/>
                  </typedef>

                  <!-- copy the test scripts over -->
                  <if>
                    <available file="${basedir}/tests/wfs-1.0.0"/>
                    <then>
                      <copy todir="${basedir}/engine/scripts/wfs-1.0.0">
                        <fileset dir="${basedir}/tests/wfs-1.0.0" includes="**/*" excludes="**/.svn"/>
                      </copy>
                    </then>
                  </if>

                  <if>
                    <available file="${basedir}/tests/wfs-1.1.0"/>
                    <then>
                      <copy todir="${basedir}/engine/scripts/wfs-1.1.0">
                        <fileset dir="${basedir}/tests/wfs-1.1.0" includes="**/*" excludes="**/.svn"/>
                      </copy>
                    </then>
                  </if>

                  <if>
                    <available file="${basedir}/tests/wms-1.1.1"/>
                    <then>
                      <copy todir="${basedir}/engine/scripts/wms-1.1.1">
                        <fileset dir="${basedir}/tests/wms-1.1.1" includes="**/*" excludes="**/.svn"/>
                      </copy>
                    </then>
                  </if>

                  <if>
                    <available file="${basedir}/tests/wcs-1.0.0"/>
                    <then>
                      <copy todir="${basedir}/engine/scripts/wcs-1.0.0">
                        <fileset dir="${basedir}/tests/wcs-1.0.0" includes="**/*" excludes="**/.svn"/>
                      </copy>
                    </then>
                  </if>

                  <if>
                    <available file="${basedir}/tests/wcs-1.1.1"/>
                    <then>
                      <copy todir="${basedir}/engine/scripts/wcs-1.1.1">
                        <fileset dir="${basedir}/tests/wcs-1.1.1" includes="**/*" excludes="**/.svn"/>
                      </copy>
                    </then>
                  </if>

                  <!-- copy over cite1 component -->
                  <copy todir="${basedir}/engine/components">
                     <fileset dir="${basedir}" includes="cite1/**/*" 
                         excludes="/**/.svn"/>
                  </copy>
 
                  <!-- create the engine build.properties file -->
                  <property name="bp.file" value="${basedir}/engine/build.properties"/>
                  <echo file="${bp.file}" message="usersdir "/>
                  <echo file="${bp.file}" append="true">${basedir}/users${line.separator}</echo>
                  <echo file="${bp.file}" append="true" message="workdir "/>
                  <echo file="${bp.file}" append="true">${basedir}/target/work${line.separator}</echo>
                  <echo file="${bp.file}" append="true" message="tomcat.dir "/>
                  <echo file="${bp.file}" append="true">${basedir}/target</echo>

				<!-- for windows, change \ to \\ -->
                 <replace file="${basedir}/engine/build.properties" token="\" value="\\" />

                  <!-- copy over the pom and realm.properties file for the 
                       engine -->
                  <copy tofile="${basedir}/engine/pom.xml" file="${basedir}/pom-engine.xml"/> 
                  <copy todir="${basedir}/engine" file="${basedir}/realm.properties"/> 

                  <!-- create users and workdir -->
                  <mkdir dir="${basedir}/target/work"/>
                  <mkdir dir="${basedir}/target/logs"/>

                  <!-- create "fake" tomcat directory -->
                  <mkdir dir="${basedir}/target/server/lib"/>
                  <mkdir dir="${basedir}/target/common/lib"/>
               </tasks> 
             </configuration>
             <goals>
                <goal>run</goal>
             </goals>
          </execution>
          <execution>
            <id>clean</id>
            <phase>clean</phase>
            <configuration>
              <tasks>
                <!-- clean the cite1 component -->
                <delete dir="${basedir}/engine/components/cite1"/>

                <!-- delete test scripts -->
                <delete includeemptydirs="true">
                  <fileset dir="${basedir}/engine/scripts" includes="**/*"/>
                </delete>

                <!-- clean the engine -->
                <ant dir="${basedir}/engine" target="clean"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <configuration>
              <tasks>
                <ant dir="${basedir}/engine"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-dependency-plugin</artifactId>
         <configuration>
            <artifactItems>
               <artifactItem>
                  <groupId>tomcat</groupId>
                  <artifactId>catalina</artifactId>
                  <version>5.5.9</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${basedir}/target/server/lib</outputDirectory>
               </artifactItem>
               <artifactItem>
                  <groupId>javax.servlet</groupId>
                  <artifactId>servlet-api</artifactId>
                  <version>2.4</version>
                  <type>jar</type>
                  <overWrite>true</overWrite>
                  <outputDirectory>${basedir}/target/common/lib</outputDirectory>
               </artifactItem>
            </artifactItems>
            <stripVersion>true</stripVersion>
         </configuration>
         <executions>
           <execution>
             <id>pre</id>
             <phase>process-sources</phase>
             <goals>
               <goal>copy</goal>
             </goals>
           </execution>
         </executions>
      </plugin> 
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>maven-jetty-plugin</artifactId>
        <version>6.1.8</version>
        <configuration>
          <contextPath>teamengine</contextPath>
          <webApp>${basedir}/engine/webapps/teamengine</webApp>
          <connectors>
            <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
              <port>9090</port>
              <maxIdleTime>10000</maxIdleTime>
            </connector>
          </connectors>
		  <userRealms>
            <userRealm implementation="org.mortbay.jetty.security.HashUserRealm">
              <name>user</name>
              <config>${basedir}/realm.properties</config>
            </userRealm>
          </userRealms>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>windows</id>
      <activation>   
        <os>
          <family>windows</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <dependencies>
              <dependency>
                 <groupId>sun.jdk</groupId>
                 <artifactId>tools</artifactId>
                 <version>1.5.0</version>
                 <scope>system</scope>
                 <systemPath>${java.home}/../lib/tools.jar</systemPath>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>linux</id>
      <activation>
        <os>
          <family>linux</family>
        </os>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <dependencies>
              <dependency>
                 <groupId>sun.jdk</groupId>
                 <artifactId>tools</artifactId>
                 <version>1.5.0</version>
                 <scope>system</scope>
                 <systemPath>${java.home}/../lib/tools.jar</systemPath>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
